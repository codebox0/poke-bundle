import Head from 'next/head'
import Image from 'next/image'
import {Inter} from 'next/font/google'
import styles from '@/styles/Home.module.css'
import {useEffect, useState} from "react";

const inter = Inter({subsets: ['latin']})

export default function Home() {

    const [pokemons, setPokemon] = useState([]);
    const [offset, setOffset] = useState(0);
    const [limit, setLimit] = useState(10);
    const [loading, setLoading] = useState(false);
    const [operation, setOperation] = useState('');

    useEffect(() => {
         getPokemons({page: offset, itemsPerPage: limit}, '').then((data) => {
            setPokemon(data);
         });
    }, [])

    useEffect(() => {
        setOffset(   operation === 'next' ? offset + limit : offset-limit < 0 ? offset : offset - limit)
        // setOffset( ste limit+offset)

        setLoading(false);
    }, [pokemons])

    const getPokemons = async (pagination?: Pagination, step: string) => {
        setLoading(true);
        // @ts-ignore
        const response = await fetch(`http://localhost:3000/api/pokemons/${pagination?.offset || offset}/${pagination?.limit || limit}`, {
            method: 'GET',
            headers: {
                accept: 'application/json',
            },

        });
        console.log('response : ', response);
        const data = await response.json()
        console.log(data);
        console.log('data : ', data);

        // setPokemon([...data])
        setOperation(step);
        return data;
        // setOffset(pagination?.offset || offset);
    }

    return (
        <>
            <Head>
                <title>Pokedex</title>
                <meta name="description" content="Generated by create next app"/>
                <meta name="viewport" content="width=device-width, initial-scale=1"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>
            <main className={styles.main}>
                <div className={styles.description}>
                    <p>POKEDEX</p>
                    <div>
                        <p>
                            Page{' '} {offset/ limit + 1}
                        </p>
                        <p >
                            Nombre par page{' '} {limit}
                        </p>
                    </div>
                </div>

                <div className={styles.center}>
                    <div>

                        <div className={styles.grid}>

                            {
                                // loading when fetching data
                                loading ? (
                                    <div className={styles.loading}>
                                        <Image
                                            src="/amalie-steiness.gif"
                                            alt="Loading"
                                            width={100}
                                            height={100}
                                        />
                                    </div>
                                ) : (
                                    // show data
                                pokemons?.map((pokemon: any) => {
                                    return <div key={pokemon.id} className={styles.pokecard}>
                                        <div>
                                            <h2>{pokemon.name}</h2>
                                        </div>
                                        <img className={styles.logo} src={pokemon.imageUrl} alt=""/>

                                    </div>
                                }
                            )
                            )}
                        </div>
                    </div>
                </div>

                <div className={styles.pagination}>
                    <button disabled={offset<=0} onClick={async () => setPokemon(await getPokemons({
                        page: offset - limit,
                        itemsPerPage: limit
                    }, 'prev')) }>Prev</button>
                    <button onClick={async () => setPokemon(await getPokemons({
                        page: offset + limit,
                        itemsPerPage: limit
                    }, 'next')) }>Next</button>
                </div>


                <div className={styles.grid}>
                </div>
            </main>
        </>
    )
}
